#!/bin/sh

pids=`ps -w | grep lte_verison_upload | grep -v grep | awk '{print $1}'`
for pid in $pids
do
	kill -9 $pid
	echo "kill $pid"
done

count=0
firmware_upload="$1"
modem_url="$2"
target_version="$3"
hash_type=$4
hash_value="$5"

[ "$firmware_upload" = "router" ] && {
	#Modem Firmware Download
	echo '1' > /tmp/modem_upgrade_status
	[ -f "/tmp/modem.zip" ] && {
		rm /tmp/modem.zip
	}
	curl -Ls --connect-timeout 5 $modem_url --max-time 1800 -o /tmp/modem.zip >> /dev/null

	#sha256 check
	echo '2' > /tmp/modem_upgrade_status
	if [ "$hash_type" = "sha256" ];then
		sha256sum=$(sha256sum /tmp/modem.zip |awk '{print $1}')
		if [ "$sha256sum" != "$hash_value" ];then
			logger -t modem_upgrade_check "Check the firmware sha256sum failed, exit,please try again!"
			echo '3' > /tmp/modem_upgrade_status
			exit 0
		fi
	else
		logger -t modem_upgrade_check "Check the firmware sha256sum type failed, exit,please try again!"
		echo '4' > /tmp/modem_upgrade_status
		exit 0
	fi
}

ubus call mqtt notify
sleep 2

#Stop the 4G modem network
echo '5' > /tmp/modem_upgrade_status
bus=`uci -q get glconfig.modem.bus | sed  's/\./_/g;s/-/_/g'`
modem_bus="modem_${bus}"
modem_enabled=$(uci -q get network.$modem_bus.disabled)
if [ "$modem_enabled" != "1" ];then
	uci set network.$modem_bus.upgrade='1'
	uci set network.$modem_bus.disabled='1'
	uci commit network

	kill $(ps|grep mwan3track|grep $modem_bus|awk -F ' ' '{print $1}')
	killall uqmi 2>/dev/null
	killall -9 gl_modem 2>/dev/null

	/etc/init.d/network reload
	sleep 2
fi

#4G modem start upgrading
echo '6' > /tmp/modem_upgrade_status
if [ "$firmware_upload" = "modem" ];then #The modem downloads the firmware for upgrade
	eval gl_modem AT AT+QFOTADL=\\\"$modem_url\\\"
elif [ "$firmware_upload" = "router" ];then #The router upload modem firmware for upgrade
	[ -f "/tmp/modem_status" ] && rm /tmp/modem_status
	count=0
	while true
	do
		/usr/bin/quec_upload -f /tmp/modem.zip -p /dev/ttyUSB4 > /tmp/modem_status

		tmp=`cat /tmp/modem_status | grep success`
		count=$((count+1))
		if [ "$tmp" != "" ];then
			flag=1
			break
		elif [ $count -gt 5 ];then
			break
		fi
	done

	if [ "$flag" = "1" ];then
		eval gl_modem AT at+qfotadl=\\\"/data/ufs/modem.zip\\\"
	fi
fi

sleep 300
count=0
while true
do
	gl_modem AT AT+QGMR
	sleep 10

	tmp=''
	tmp=`gl_modem AT AT+QGMR | grep EP06`

	version=''
	version=${tmp%?}
	if [ "$version" != "$target_version" ];then
		sleep 60
		count=$(($count+1))
	else
		break
	fi

	if [ $count -gt 60 ];then
		logger -t modem_upgrade_check "Upgrade failed, exit,please try again!"
		echo '7' > /tmp/modem_upgrade_status
		echo "Modem upgrade failure"
		break
	fi
done

#Restore Verizon APN
[ -f "/tmp/sim_type" ] && {
	sim_type=`cat /tmp/sim_type`

	if [ "$sim_type" = "verizon" ];then
		count=0
		while true
		do
			select=`gl_modem AT at+qmbncfg=\"list\" | grep "Verizon" | awk -F ',' '{print $3}'`
			active=`gl_modem AT at+qmbncfg=\"list\" | grep "Verizon" | awk -F ',' '{print $4}'`

			if [ "$select" = "0" -o "$active" = "0" -o "$select" = "" -o "$active" = "" ];then
				count=$((count+1))
				eval gl_modem AT AT+QMBNCFG=\\\"AutoSel\\\",1
				eval gl_modem AT AT+QPOWD

				sleep 30
			else
				break
			fi

			if [ $count -gt 5 ];then
				break
			fi
		done
	fi
}

#Restore 4G network
upgrade=`uci -q get network.modem_1_1_2.upgrade`
if [ "$modem_enabled" = "0" -o "$upgrade" = "1" ];then
	modem_mtu=`uci -q get network.$modem_bus.mtu`
	[ -z "$modem_mtu" -a `cat /tmp/sim_type` = "verizon" ] && uci set network.$modem_bus.mtu='1428'
	uci set network.$modem_bus.disabled='0'
	uci del network.$modem_bus.upgrade
	uci commit network

	zone=`uci -q get firewall.@zone[1].network`
	flag=`uci -q get firewall.@zone[1].network | grep modem`
	[ -z "$flag" ] && {
		uci set firewall.@zone[1].network="$zone $modem_bus"
		uci commit firewall
		/etc/init.d/firewall reload
	}

	/etc/init.d/network reload
	sleep 10
fi

sleep 30
/etc/init.d/gl_mqtt restart

/usr/bin/lte_verison_upload &
